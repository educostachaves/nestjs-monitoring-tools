version: "3.7"

services:
  app:
    container_name: ${APP_NAME}
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      args:
        - PORT=${PORT}
        - NODE_ENV=${NODE_ENV}
    user: node
    working_dir: /home/node/app
    env_file:
      - ./.env
    volumes:
      - .:/home/node/app
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
    networks:
      - mynet
    command: "yarn start:dev"

  postgres:
    container_name: ${POSTGRES_HOST}
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - mynet

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres
    networks:
      - mynet

  redis:
    command: redis-server --port 6379
    image: redis
    environment:
      - REDIS_DATA_DIR=/data/redis
    ports:
      - "6379:6379"
    networks:
      - mynet

  sentry:
    container_name: sentry
    image: sentry
    depends_on:
      - redis
      - postgres
    ports:
      - 9000:9000
    env_file:
      - ./.env
    networks:
      - mynet

  cron:
    image: sentry
    depends_on:
      - redis
      - postgres
    command: "sentry run cron"
    env_file:
      - ./.env
    networks:
      - mynet

  worker:
    image: sentry
    depends_on:
      - redis
      - postgres
    command: "sentry run worker"
    env_file:
      - ./.env
    networks:
      - mynet

  sonarqube:
    container_name: sonarqube
    image: sonarqube
    env_file:
      - ./.env
    expose:
      - 9000
    ports:
      - "9001:9000"
    networks:
      - mynet
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  db-data:

networks:
  mynet:
